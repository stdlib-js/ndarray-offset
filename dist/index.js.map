{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar strides2offset = require( '@stdlib/ndarray-base-strides2offset' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Return the index offset specifying the underlying buffer index of the first iterated ndarray element.\n*\n* @param {ndarrayLike} x - input ndarray\n* @throws {TypeError} must provide an ndarray\n* @returns {NonNegativeInteger} index offset\n*\n* @example\n* var zeros = require( '@stdlib/ndarray-zeros' );\n*\n* var n = offset( zeros( [ 3, 3, 3 ] ) );\n* // returns 0\n*/\nfunction offset( x ) {\n\tvar st;\n\tvar sh;\n\tvar n;\n\n\t// Note: we intentionally avoid rigorous ndarray checks to minimize performance impacts. This obviously means that non-ndarray-like objects can sneak through, but this is likely all right for the purposes of this function...\n\tif ( typeof x !== 'object' || x === null ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an ndarray. Value: `%s`.', x ) );\n\t}\n\tn = x.offset;\n\tif ( isNonNegativeInteger( n ) ) {\n\t\treturn n;\n\t}\n\tsh = x.shape;\n\tif ( !isCollection( sh ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an ndarray. Value: `%s`.', x ) );\n\t}\n\tst = x.strides;\n\tif ( sh.length === 0 || !isCollection( st ) ) {\n\t\treturn 0;\n\t}\n\tn = strides2offset( sh, st );\n\tif ( isNonNegativeInteger( n ) ) {\n\t\treturn n;\n\t}\n\tthrow new TypeError( format( 'invalid argument. Must provide an ndarray. Value: `%s`.', x ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = offset;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the index offset specifying the underlying buffer index of the first iterated ndarray element.\n*\n* @module @stdlib/ndarray-offset\n*\n* @example\n* var zeros = require( '@stdlib/ndarray-zeros' );\n* var offset = require( '@stdlib/ndarray-offset' );\n*\n* var n = offset( zeros( [ 3, 3, 3 ] ) );\n* // returns 0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAuB,QAAS,uCAAwC,EAAE,YAC1EC,EAAe,QAAS,8BAA+B,EACvDC,EAAiB,QAAS,qCAAsC,EAChEC,EAAS,QAAS,uBAAwB,EAkB9C,SAASC,EAAQC,EAAI,CACpB,IAAIC,EACAC,EACAC,EAGJ,GAAK,OAAOH,GAAM,UAAYA,IAAM,KACnC,MAAM,IAAI,UAAWF,EAAQ,0DAA2DE,CAAE,CAAE,EAG7F,GADAG,EAAIH,EAAE,OACDL,EAAsBQ,CAAE,EAC5B,OAAOA,EAGR,GADAD,EAAKF,EAAE,MACF,CAACJ,EAAcM,CAAG,EACtB,MAAM,IAAI,UAAWJ,EAAQ,0DAA2DE,CAAE,CAAE,EAG7F,GADAC,EAAKD,EAAE,QACFE,EAAG,SAAW,GAAK,CAACN,EAAcK,CAAG,EACzC,MAAO,GAGR,GADAE,EAAIN,EAAgBK,EAAID,CAAG,EACtBN,EAAsBQ,CAAE,EAC5B,OAAOA,EAER,MAAM,IAAI,UAAWL,EAAQ,0DAA2DE,CAAE,CAAE,CAC7F,CAKAN,EAAO,QAAUK,ICvCjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isNonNegativeInteger", "isCollection", "strides2offset", "format", "offset", "x", "st", "sh", "n", "main"]
}
